{"ast":null,"code":"import _objectSpread from \"C:/Users/Dell 5540/Documents/MesProjets/Dahira/rapport-dahira/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _defineProperty from \"C:/Users/Dell 5540/Documents/MesProjets/Dahira/rapport-dahira/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nlet e = -1;\nconst t = t => {\n    addEventListener(\"pageshow\", n => {\n      n.persisted && (e = n.timeStamp, t(n));\n    }, !0);\n  },\n  n = (e, t, n, i) => {\n    let s, o;\n    return r => {\n      t.value >= 0 && (r || i) && (o = t.value - (s !== null && s !== void 0 ? s : 0), (o || void 0 === s) && (s = t.value, t.delta = o, t.rating = ((e, t) => e > t[1] ? \"poor\" : e > t[0] ? \"needs-improvement\" : \"good\")(t.value, n), e(t)));\n    };\n  },\n  i = e => {\n    requestAnimationFrame(() => requestAnimationFrame(() => e()));\n  },\n  s = () => {\n    const e = performance.getEntriesByType(\"navigation\")[0];\n    if (e && e.responseStart > 0 && e.responseStart < performance.now()) return e;\n  },\n  o = () => {\n    var _e$activationStart;\n    const e = s();\n    return (_e$activationStart = e === null || e === void 0 ? void 0 : e.activationStart) !== null && _e$activationStart !== void 0 ? _e$activationStart : 0;\n  },\n  r = function (t) {\n    let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    const i = s();\n    let r = \"navigate\";\n    e >= 0 ? r = \"back-forward-cache\" : i && (document.prerendering || o() > 0 ? r = \"prerender\" : document.wasDiscarded ? r = \"restore\" : i.type && (r = i.type.replace(/_/g, \"-\")));\n    return {\n      name: t,\n      value: n,\n      rating: \"good\",\n      delta: 0,\n      entries: [],\n      id: \"v5-\".concat(Date.now(), \"-\").concat(Math.floor(8999999999999 * Math.random()) + 1e12),\n      navigationType: r\n    };\n  },\n  c = new WeakMap();\nfunction a(e, t) {\n  return c.get(e) || c.set(e, new t()), c.get(e);\n}\nclass d {\n  constructor() {\n    _defineProperty(this, \"t\", void 0);\n    _defineProperty(this, \"i\", 0);\n    _defineProperty(this, \"o\", []);\n  }\n  h(e) {\n    var _this$t;\n    if (e.hadRecentInput) return;\n    const t = this.o[0],\n      n = this.o.at(-1);\n    this.i && t && n && e.startTime - n.startTime < 1e3 && e.startTime - t.startTime < 5e3 ? (this.i += e.value, this.o.push(e)) : (this.i = e.value, this.o = [e]), (_this$t = this.t) === null || _this$t === void 0 ? void 0 : _this$t.call(this, e);\n  }\n}\nconst h = function (e, t) {\n    let n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    try {\n      if (PerformanceObserver.supportedEntryTypes.includes(e)) {\n        const i = new PerformanceObserver(e => {\n          Promise.resolve().then(() => {\n            t(e.getEntries());\n          });\n        });\n        return i.observe(_objectSpread({\n          type: e,\n          buffered: !0\n        }, n)), i;\n      }\n    } catch (_unused) {}\n  },\n  f = e => {\n    let t = !1;\n    return () => {\n      t || (e(), t = !0);\n    };\n  };\nlet u = -1;\nconst l = new Set(),\n  m = () => \"hidden\" !== document.visibilityState || document.prerendering ? 1 / 0 : 0,\n  p = e => {\n    if (\"hidden\" === document.visibilityState) {\n      if (\"visibilitychange\" === e.type) for (const e of l) e();\n      isFinite(u) || (u = \"visibilitychange\" === e.type ? e.timeStamp : 0, removeEventListener(\"prerenderingchange\", p, !0));\n    }\n  },\n  v = () => {\n    if (u < 0) {\n      var _globalThis$performan;\n      const e = o(),\n        n = document.prerendering ? void 0 : (_globalThis$performan = globalThis.performance.getEntriesByType(\"visibility-state\").filter(t => \"hidden\" === t.name && t.startTime > e)[0]) === null || _globalThis$performan === void 0 ? void 0 : _globalThis$performan.startTime;\n      u = n !== null && n !== void 0 ? n : m(), addEventListener(\"visibilitychange\", p, !0), addEventListener(\"prerenderingchange\", p, !0), t(() => {\n        setTimeout(() => {\n          u = m();\n        });\n      });\n    }\n    return {\n      get firstHiddenTime() {\n        return u;\n      },\n      onHidden(e) {\n        l.add(e);\n      }\n    };\n  },\n  g = e => {\n    document.prerendering ? addEventListener(\"prerenderingchange\", () => e(), !0) : e();\n  },\n  y = [1800, 3e3],\n  E = function (e) {\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    g(() => {\n      const c = v();\n      let a,\n        d = r(\"FCP\");\n      const f = h(\"paint\", e => {\n        for (const t of e) \"first-contentful-paint\" === t.name && (f.disconnect(), t.startTime < c.firstHiddenTime && (d.value = Math.max(t.startTime - o(), 0), d.entries.push(t), a(!0)));\n      });\n      f && (a = n(e, d, y, s.reportAllChanges), t(t => {\n        d = r(\"FCP\"), a = n(e, d, y, s.reportAllChanges), i(() => {\n          d.value = performance.now() - t.timeStamp, a(!0);\n        });\n      }));\n    });\n  },\n  b = [.1, .25],\n  L = function (e) {\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const o = v();\n    E(f(() => {\n      let c,\n        f = r(\"CLS\", 0);\n      const u = a(s, d),\n        l = e => {\n          for (const t of e) u.h(t);\n          u.i > f.value && (f.value = u.i, f.entries = u.o, c());\n        },\n        m = h(\"layout-shift\", l);\n      m && (c = n(e, f, b, s.reportAllChanges), o.onHidden(() => {\n        l(m.takeRecords()), c(!0);\n      }), t(() => {\n        u.i = 0, f = r(\"CLS\", 0), c = n(e, f, b, s.reportAllChanges), i(() => c());\n      }), setTimeout(c));\n    }));\n  };\nlet P = 0,\n  T = 1 / 0,\n  _ = 0;\nconst M = e => {\n  for (const t of e) t.interactionId && (T = Math.min(T, t.interactionId), _ = Math.max(_, t.interactionId), P = _ ? (_ - T) / 7 + 1 : 0);\n};\nlet w;\nconst C = () => {\n    var _performance$interact;\n    return w ? P : (_performance$interact = performance.interactionCount) !== null && _performance$interact !== void 0 ? _performance$interact : 0;\n  },\n  I = () => {\n    \"interactionCount\" in performance || w || (w = h(\"event\", M, {\n      type: \"event\",\n      buffered: !0,\n      durationThreshold: 0\n    }));\n  };\nlet F = 0;\nclass k {\n  constructor() {\n    _defineProperty(this, \"u\", []);\n    _defineProperty(this, \"l\", new Map());\n    _defineProperty(this, \"m\", void 0);\n    _defineProperty(this, \"p\", void 0);\n  }\n  v() {\n    F = C(), this.u.length = 0, this.l.clear();\n  }\n  L() {\n    const e = Math.min(this.u.length - 1, Math.floor((C() - F) / 50));\n    return this.u[e];\n  }\n  h(e) {\n    var _this$m;\n    if ((_this$m = this.m) !== null && _this$m !== void 0 && _this$m.call(this, e), !e.interactionId && \"first-input\" !== e.entryType) return;\n    const t = this.u.at(-1);\n    let n = this.l.get(e.interactionId);\n    if (n || this.u.length < 10 || e.duration > t.P) {\n      var _this$p;\n      if (n ? e.duration > n.P ? (n.entries = [e], n.P = e.duration) : e.duration === n.P && e.startTime === n.entries[0].startTime && n.entries.push(e) : (n = {\n        id: e.interactionId,\n        entries: [e],\n        P: e.duration\n      }, this.l.set(n.id, n), this.u.push(n)), this.u.sort((e, t) => t.P - e.P), this.u.length > 10) {\n        const e = this.u.splice(10);\n        for (const t of e) this.l.delete(t.id);\n      }\n      (_this$p = this.p) === null || _this$p === void 0 || _this$p.call(this, n);\n    }\n  }\n}\nconst A = e => {\n    const t = globalThis.requestIdleCallback || setTimeout;\n    \"hidden\" === document.visibilityState ? e() : (e = f(e), addEventListener(\"visibilitychange\", e, {\n      once: !0,\n      capture: !0\n    }), t(() => {\n      e(), removeEventListener(\"visibilitychange\", e, {\n        capture: !0\n      });\n    }));\n  },\n  B = [200, 500],\n  S = function (e) {\n    let i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!globalThis.PerformanceEventTiming || !(\"interactionId\" in PerformanceEventTiming.prototype)) return;\n    const s = v();\n    g(() => {\n      var _i$durationThreshold;\n      I();\n      let o,\n        c = r(\"INP\");\n      const d = a(i, k),\n        f = e => {\n          A(() => {\n            for (const t of e) d.h(t);\n            const t = d.L();\n            t && t.P !== c.value && (c.value = t.P, c.entries = t.entries, o());\n          });\n        },\n        u = h(\"event\", f, {\n          durationThreshold: (_i$durationThreshold = i.durationThreshold) !== null && _i$durationThreshold !== void 0 ? _i$durationThreshold : 40\n        });\n      o = n(e, c, B, i.reportAllChanges), u && (u.observe({\n        type: \"first-input\",\n        buffered: !0\n      }), s.onHidden(() => {\n        f(u.takeRecords()), o(!0);\n      }), t(() => {\n        d.v(), c = r(\"INP\"), o = n(e, c, B, i.reportAllChanges);\n      }));\n    });\n  };\nclass N {\n  constructor() {\n    _defineProperty(this, \"m\", void 0);\n  }\n  h(e) {\n    var _this$m2;\n    (_this$m2 = this.m) === null || _this$m2 === void 0 || _this$m2.call(this, e);\n  }\n}\nconst q = [2500, 4e3],\n  x = function (e) {\n    let s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    g(() => {\n      const c = v();\n      let d,\n        u = r(\"LCP\");\n      const l = a(s, N),\n        m = e => {\n          s.reportAllChanges || (e = e.slice(-1));\n          for (const t of e) l.h(t), t.startTime < c.firstHiddenTime && (u.value = Math.max(t.startTime - o(), 0), u.entries = [t], d());\n        },\n        p = h(\"largest-contentful-paint\", m);\n      if (p) {\n        d = n(e, u, q, s.reportAllChanges);\n        const o = f(() => {\n            m(p.takeRecords()), p.disconnect(), d(!0);\n          }),\n          c = e => {\n            e.isTrusted && (A(o), removeEventListener(e.type, c, {\n              capture: !0\n            }));\n          };\n        for (const e of [\"keydown\", \"click\", \"visibilitychange\"]) addEventListener(e, c, {\n          capture: !0\n        });\n        t(t => {\n          u = r(\"LCP\"), d = n(e, u, q, s.reportAllChanges), i(() => {\n            u.value = performance.now() - t.timeStamp, d(!0);\n          });\n        });\n      }\n    });\n  },\n  H = [800, 1800],\n  O = e => {\n    document.prerendering ? g(() => O(e)) : \"complete\" !== document.readyState ? addEventListener(\"load\", () => O(e), !0) : setTimeout(e);\n  },\n  $ = function (e) {\n    let i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let c = r(\"TTFB\"),\n      a = n(e, c, H, i.reportAllChanges);\n    O(() => {\n      const d = s();\n      d && (c.value = Math.max(d.responseStart - o(), 0), c.entries = [d], a(!0), t(() => {\n        c = r(\"TTFB\", 0), a = n(e, c, H, i.reportAllChanges), a(!0);\n      }));\n    });\n  };\nexport { b as CLSThresholds, y as FCPThresholds, B as INPThresholds, q as LCPThresholds, H as TTFBThresholds, L as onCLS, E as onFCP, S as onINP, x as onLCP, $ as onTTFB };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}